name: CI/CD Pipeline

on:
  push:
    branches:  main 
  pull_request:
    branches:  main 

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
      KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}
    steps:

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Backend Lint
      working-directory: ./backend
      run: npm run lint || echo "Lint issues found in backend"

    - name: Run Frontend Lint
      working-directory: ./frontend
      run: npm run lint || echo "Lint issues found in frontend"

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test || echo "Some backend tests failed"

    - name: Log in to DockerHub
      run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t $DOCKER_USER/backend:latest ./backend
        docker push $DOCKER_USER/backend:latest

    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t $DOCKER_USER/frontend:latest ./frontend
        docker push $DOCKER_USER/frontend:latest

    - name: Decode and Configure KUBECONFIG
      run: |
        echo "$KUBECONFIG_BASE64" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig
        kubectl config get-contexts

    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f namespace.yml
        kubectl apply -f backend-deployment.yaml
        kubectl apply -f frontend-deployment.yaml
